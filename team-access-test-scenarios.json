{
  "team_access_testing_scenarios": {
    "description": "Complete test scenarios for team member access with different permission levels",
    
    "setup": {
      "description": "First, create team access records with different permission levels",
      "requests": [
        {
          "name": "1. Grant Full Access to Manager",
          "method": "POST",
          "url": "{{baseUrl}}/team/grant-access",
          "headers": {
            "Authorization": "Bearer {{ownerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "userEmail": "manager@company.com",
            "accessLevel": "full_access",
            "reason": "Manager needs full access to all operations"
          }
        },
        {
          "name": "2. Grant Limited Access to Supervisor",
          "method": "POST",
          "url": "{{baseUrl}}/team/grant-access",
          "headers": {
            "Authorization": "Bearer {{ownerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "userEmail": "supervisor@company.com",
            "accessLevel": "manage_operations",
            "permissions": {
              "canViewJobs": true,
              "canEditJobs": true,
              "canViewAttendance": true,
              "canEditAttendance": true,
              "canViewApplications": true,
              "canManageApplications": true
            },
            "reason": "Supervisor needs operational management access"
          }
        },
        {
          "name": "3. Grant View Only Access to Assistant",
          "method": "POST",
          "url": "{{baseUrl}}/team/grant-access",
          "headers": {
            "Authorization": "Bearer {{ownerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "userEmail": "assistant@company.com",
            "accessLevel": "view_only",
            "permissions": {
              "canViewJobs": true,
              "canViewAttendance": true,
              "canViewApplications": true,
              "canViewEmployment": true
            },
            "reason": "Assistant needs read-only access for reporting"
          }
        }
      ]
    },

    "testing_as_manager": {
      "description": "Login as manager@company.com (full_access) and test all operations",
      "auth_token": "{{managerToken}}",
      "employee_context": "{{employeeId}}",
      
      "business_operations": [
        {
          "name": "List All Businesses (Manager can access all)",
          "method": "GET", 
          "url": "{{baseUrl}}/businesses",
          "headers": {
            "Authorization": "Bearer {{managerToken}}"
          },
          "expected": "Should list all businesses the employee is associated with"
        },
        {
          "name": "Create New Business (Manager has full access)",
          "method": "POST",
          "url": "{{baseUrl}}/businesses",
          "headers": {
            "Authorization": "Bearer {{managerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "businessName": "Test Business via Manager",
            "businessType": "Technology",
            "description": "Created by manager with team access"
          },
          "expected": "Should successfully create business"
        }
      ],

      "job_operations": [
        {
          "name": "List All Jobs (Manager can view all)",
          "method": "GET",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{managerToken}}"
          },
          "expected": "Should list all jobs for the employee"
        },
        {
          "name": "Create New Job (Manager can create)",
          "method": "POST",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{managerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "title": "Software Developer",
            "description": "Full-stack developer position",
            "businessId": "{{businessId}}",
            "location": "Remote",
            "salary": {
              "min": 80000,
              "max": 120000
            },
            "requirements": ["JavaScript", "Node.js", "React"]
          },
          "expected": "Should successfully create job"
        },
        {
          "name": "Update Job (Manager can edit)",
          "method": "PATCH",
          "url": "{{baseUrl}}/jobs/{{jobId}}",
          "headers": {
            "Authorization": "Bearer {{managerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "title": "Senior Software Developer",
            "salary": {
              "min": 90000,
              "max": 140000
            }
          },
          "expected": "Should successfully update job"
        }
      ],

      "attendance_operations": [
        {
          "name": "View Attendance Records (Manager can view all)",
          "method": "GET",
          "url": "{{baseUrl}}/attendance",
          "headers": {
            "Authorization": "Bearer {{managerToken}}"
          },
          "expected": "Should list all attendance records"
        },
        {
          "name": "Create Attendance Record (Manager can create)",
          "method": "POST",
          "url": "{{baseUrl}}/attendance",
          "headers": {
            "Authorization": "Bearer {{managerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "workerId": "{{workerId}}",
            "shiftId": "{{shiftId}}",
            "checkIn": "2025-10-05T09:00:00Z",
            "checkOut": "2025-10-05T17:00:00Z",
            "status": "present"
          },
          "expected": "Should successfully create attendance record"
        }
      ]
    },

    "testing_as_supervisor": {
      "description": "Login as supervisor@company.com (manage_operations) and test operations",
      "auth_token": "{{supervisorToken}}",
      "employee_context": "{{employeeId}}",

      "job_operations": [
        {
          "name": "List Jobs (Supervisor can view)",
          "method": "GET",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}"
          },
          "expected": "Should list jobs (view permission granted)"
        },
        {
          "name": "Update Job (Supervisor can edit)",
          "method": "PATCH",
          "url": "{{baseUrl}}/jobs/{{jobId}}",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "description": "Updated by supervisor",
            "status": "active"
          },
          "expected": "Should successfully update job (edit permission granted)"
        },
        {
          "name": "Create Job (Should be restricted if no create permission)",
          "method": "POST",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "title": "Test Job by Supervisor",
            "description": "This should fail if no create permission"
          },
          "expected": "Should fail with 403 if canCreateJobs is false"
        }
      ],

      "attendance_operations": [
        {
          "name": "View Attendance (Supervisor can view)",
          "method": "GET",
          "url": "{{baseUrl}}/attendance",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}"
          },
          "expected": "Should list attendance records (view permission granted)"
        },
        {
          "name": "Edit Attendance (Supervisor can edit)",
          "method": "PATCH",
          "url": "{{baseUrl}}/attendance/{{attendanceId}}",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "status": "approved",
            "notes": "Approved by supervisor"
          },
          "expected": "Should successfully update attendance (edit permission granted)"
        }
      ],

      "application_operations": [
        {
          "name": "View Applications (Supervisor can view)",
          "method": "GET",
          "url": "{{baseUrl}}/applications",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}"
          },
          "expected": "Should list applications (view permission granted)"
        },
        {
          "name": "Manage Application (Supervisor can manage)",
          "method": "PATCH",
          "url": "{{baseUrl}}/applications/{{applicationId}}",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "status": "shortlisted",
            "notes": "Good candidate, proceed to interview"
          },
          "expected": "Should successfully update application (manage permission granted)"
        }
      ]
    },

    "testing_as_assistant": {
      "description": "Login as assistant@company.com (view_only) and test read operations",
      "auth_token": "{{assistantToken}}",
      "employee_context": "{{employeeId}}",

      "read_only_operations": [
        {
          "name": "View Jobs (Assistant can view only)",
          "method": "GET",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}"
          },
          "expected": "Should list jobs (view permission granted)"
        },
        {
          "name": "View Attendance (Assistant can view only)",
          "method": "GET",
          "url": "{{baseUrl}}/attendance",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}"
          },
          "expected": "Should list attendance records (view permission granted)"
        },
        {
          "name": "View Applications (Assistant can view only)",
          "method": "GET",
          "url": "{{baseUrl}}/applications",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}"
          },
          "expected": "Should list applications (view permission granted)"
        }
      ],

      "restricted_operations": [
        {
          "name": "Try to Create Job (Should Fail)",
          "method": "POST",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "title": "Unauthorized Job Creation",
            "description": "This should fail"
          },
          "expected": "Should fail with 403 Forbidden (no create permission)"
        },
        {
          "name": "Try to Edit Attendance (Should Fail)",
          "method": "PATCH",
          "url": "{{baseUrl}}/attendance/{{attendanceId}}",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "status": "approved"
          },
          "expected": "Should fail with 403 Forbidden (no edit permission)"
        },
        {
          "name": "Try to Manage Applications (Should Fail)",
          "method": "PATCH",
          "url": "{{baseUrl}}/applications/{{applicationId}}",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "status": "rejected"
          },
          "expected": "Should fail with 403 Forbidden (no manage permission)"
        }
      ]
    },

    "team_management_tests": [
      {
        "name": "Check Team Access (Any team member)",
        "method": "GET",
        "url": "{{baseUrl}}/team/check-access-by-email/{{employeeEmail}}",
        "headers": {
          "Authorization": "Bearer {{teamMemberToken}}"
        },
        "query_params": {
          "permission": "canViewJobs"
        },
        "expected": "Should return access details based on granted permissions"
      },
      {
        "name": "List My Access (Team member's granted access)",
        "method": "GET",
        "url": "{{baseUrl}}/team/my-access",
        "headers": {
          "Authorization": "Bearer {{teamMemberToken}}"
        },
        "expected": "Should list all employees this team member can manage"
      },
      {
        "name": "Get Access Report (If has permission)",
        "method": "GET",
        "url": "{{baseUrl}}/team/report/{{employeeId}}",
        "headers": {
          "Authorization": "Bearer {{teamMemberToken}}"
        },
        "expected": "Should return detailed access report if permission allows"
      }
    ],

    "permission_testing_matrix": {
      "description": "Test matrix for different permission combinations",
      "scenarios": [
        {
          "permission": "canViewJobs",
          "test_url": "{{baseUrl}}/jobs",
          "method": "GET",
          "should_work_for": ["manager", "supervisor", "assistant"],
          "should_fail_for": ["no_access_user"]
        },
        {
          "permission": "canCreateJobs",
          "test_url": "{{baseUrl}}/jobs",
          "method": "POST",
          "should_work_for": ["manager"],
          "should_fail_for": ["supervisor", "assistant"]
        },
        {
          "permission": "canEditJobs",
          "test_url": "{{baseUrl}}/jobs/{{jobId}}",
          "method": "PATCH",
          "should_work_for": ["manager", "supervisor"],
          "should_fail_for": ["assistant"]
        },
        {
          "permission": "canViewAttendance",
          "test_url": "{{baseUrl}}/attendance",
          "method": "GET",
          "should_work_for": ["manager", "supervisor", "assistant"],
          "should_fail_for": ["no_access_user"]
        },
        {
          "permission": "canEditAttendance",
          "test_url": "{{baseUrl}}/attendance/{{attendanceId}}",
          "method": "PATCH",
          "should_work_for": ["manager", "supervisor"],
          "should_fail_for": ["assistant"]
        }
      ]
    },

    "environment_variables": {
      "description": "Postman environment variables needed for testing",
      "variables": {
        "baseUrl": "http://localhost:3000/api/v1",
        "ownerToken": "JWT_TOKEN_OF_BUSINESS_OWNER",
        "managerToken": "JWT_TOKEN_OF_MANAGER_USER",
        "supervisorToken": "JWT_TOKEN_OF_SUPERVISOR_USER", 
        "assistantToken": "JWT_TOKEN_OF_ASSISTANT_USER",
        "employeeId": "MONGODB_OBJECT_ID_OF_EMPLOYEE",
        "employeeEmail": "EMAIL_OF_EMPLOYEE_BEING_MANAGED",
        "businessId": "MONGODB_OBJECT_ID_OF_BUSINESS",
        "jobId": "MONGODB_OBJECT_ID_OF_JOB",
        "attendanceId": "MONGODB_OBJECT_ID_OF_ATTENDANCE",
        "applicationId": "MONGODB_OBJECT_ID_OF_APPLICATION",
        "workerId": "MONGODB_OBJECT_ID_OF_WORKER",
        "shiftId": "MONGODB_OBJECT_ID_OF_SHIFT"
      }
    }
  }
}