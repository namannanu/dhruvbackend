{
  "team_access_api_tests": {
    "base_url": "{{baseUrl}}",
    "description": "Team access management API testing with different permission levels",
    
    "environment_variables": {
      "baseUrl": "http://localhost:3000/api/v1",
      "ownerToken": "JWT_TOKEN_OF_BUSINESS_OWNER",
      "managerToken": "JWT_TOKEN_OF_MANAGER_USER",
      "supervisorToken": "JWT_TOKEN_OF_SUPERVISOR_USER",
      "assistantToken": "JWT_TOKEN_OF_ASSISTANT_USER",
      "employeeId": "MONGODB_OBJECT_ID_OF_EMPLOYEE",
      "jobId": "MONGODB_OBJECT_ID_OF_JOB",
      "attendanceId": "MONGODB_OBJECT_ID_OF_ATTENDANCE",
      "applicationId": "MONGODB_OBJECT_ID_OF_APPLICATION"
    },

    "setup_requests": {
      "1_grant_manager_access": {
        "method": "POST",
        "url": "{{baseUrl}}/team/grant-access",
        "headers": {
          "Authorization": "Bearer {{ownerToken}}",
          "Content-Type": "application/json"
        },
        "body": {
          "userEmail": "manager@company.com",
          "accessLevel": "full_access",
          "reason": "Manager needs full access to all operations"
        }
      },
      "2_grant_supervisor_access": {
        "method": "POST",
        "url": "{{baseUrl}}/team/grant-access",
        "headers": {
          "Authorization": "Bearer {{ownerToken}}",
          "Content-Type": "application/json"
        },
        "body": {
          "userEmail": "supervisor@company.com",
          "accessLevel": "manage_operations",
          "permissions": {
            "canViewJobs": true,
            "canEditJobs": true,
            "canCreateJobs": false,
            "canViewAttendance": true,
            "canEditAttendance": true,
            "canViewApplications": true,
            "canManageApplications": true
          },
          "reason": "Supervisor needs operational management access"
        }
      },
      "3_grant_assistant_access": {
        "method": "POST",
        "url": "{{baseUrl}}/team/grant-access",
        "headers": {
          "Authorization": "Bearer {{ownerToken}}",
          "Content-Type": "application/json"
        },
        "body": {
          "userEmail": "assistant@company.com",
          "accessLevel": "view_only",
          "permissions": {
            "canViewJobs": true,
            "canViewAttendance": true,
            "canViewApplications": true,
            "canViewEmployment": true
          },
          "reason": "Assistant needs read-only access for reporting"
        }
      }
    },

    "manager_tests": {
      "login_token": "{{managerToken}}",
      "expected_access": "full_access - can perform all operations",
      
      "job_operations": {
        "list_jobs": {
          "method": "GET",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{managerToken}}"
          },
          "expected_result": "200 OK - List all jobs"
        },
        "create_job": {
          "method": "POST",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{managerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "title": "Software Developer",
            "description": "Full-stack developer position created by manager",
            "location": "Remote",
            "salary": {
              "min": 80000,
              "max": 120000
            },
            "requirements": ["JavaScript", "Node.js", "React"]
          },
          "expected_result": "201 Created - Job created successfully"
        },
        "update_job": {
          "method": "PATCH",
          "url": "{{baseUrl}}/jobs/{{jobId}}",
          "headers": {
            "Authorization": "Bearer {{managerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "title": "Senior Software Developer",
            "salary": {
              "min": 90000,
              "max": 140000
            }
          },
          "expected_result": "200 OK - Job updated successfully"
        },
        "delete_job": {
          "method": "DELETE",
          "url": "{{baseUrl}}/jobs/{{jobId}}",
          "headers": {
            "Authorization": "Bearer {{managerToken}}"
          },
          "expected_result": "200 OK - Job deleted successfully"
        }
      },

      "attendance_operations": {
        "view_attendance": {
          "method": "GET",
          "url": "{{baseUrl}}/attendance",
          "headers": {
            "Authorization": "Bearer {{managerToken}}"
          },
          "expected_result": "200 OK - List all attendance records"
        },
        "create_attendance": {
          "method": "POST",
          "url": "{{baseUrl}}/attendance",
          "headers": {
            "Authorization": "Bearer {{managerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "workerId": "{{workerId}}",
            "date": "2025-10-05",
            "checkIn": "09:00:00",
            "checkOut": "17:00:00",
            "status": "present"
          },
          "expected_result": "201 Created - Attendance record created"
        }
      },

      "business_operations": {
        "list_businesses": {
          "method": "GET",
          "url": "{{baseUrl}}/businesses",
          "headers": {
            "Authorization": "Bearer {{managerToken}}"
          },
          "expected_result": "200 OK - List all businesses"
        },
        "create_business": {
          "method": "POST",
          "url": "{{baseUrl}}/businesses",
          "headers": {
            "Authorization": "Bearer {{managerToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "businessName": "Test Company via Manager",
            "businessType": "Technology",
            "description": "Business created through team access"
          },
          "expected_result": "201 Created - Business created successfully"
        }
      }
    },

    "supervisor_tests": {
      "login_token": "{{supervisorToken}}",
      "expected_access": "manage_operations - can view and edit, limited create",
      
      "allowed_operations": {
        "view_jobs": {
          "method": "GET",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}"
          },
          "expected_result": "200 OK - Can view jobs"
        },
        "update_job": {
          "method": "PATCH",
          "url": "{{baseUrl}}/jobs/{{jobId}}",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "description": "Updated by supervisor",
            "status": "active"
          },
          "expected_result": "200 OK - Can edit jobs"
        },
        "view_attendance": {
          "method": "GET",
          "url": "{{baseUrl}}/attendance",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}"
          },
          "expected_result": "200 OK - Can view attendance"
        },
        "edit_attendance": {
          "method": "PATCH",
          "url": "{{baseUrl}}/attendance/{{attendanceId}}",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "status": "approved",
            "notes": "Approved by supervisor"
          },
          "expected_result": "200 OK - Can edit attendance"
        },
        "manage_applications": {
          "method": "PATCH",
          "url": "{{baseUrl}}/applications/{{applicationId}}",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "status": "shortlisted",
            "notes": "Good candidate, proceed to interview"
          },
          "expected_result": "200 OK - Can manage applications"
        }
      },

      "restricted_operations": {
        "create_job": {
          "method": "POST",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "title": "Unauthorized Job Creation",
            "description": "This should fail for supervisor"
          },
          "expected_result": "403 Forbidden - No create job permission"
        },
        "delete_job": {
          "method": "DELETE",
          "url": "{{baseUrl}}/jobs/{{jobId}}",
          "headers": {
            "Authorization": "Bearer {{supervisorToken}}"
          },
          "expected_result": "403 Forbidden - No delete permission"
        }
      }
    },

    "assistant_tests": {
      "login_token": "{{assistantToken}}",
      "expected_access": "view_only - can only read data",
      
      "allowed_operations": {
        "view_jobs": {
          "method": "GET",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}"
          },
          "expected_result": "200 OK - Can view jobs"
        },
        "view_attendance": {
          "method": "GET",
          "url": "{{baseUrl}}/attendance",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}"
          },
          "expected_result": "200 OK - Can view attendance"
        },
        "view_applications": {
          "method": "GET",
          "url": "{{baseUrl}}/applications",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}"
          },
          "expected_result": "200 OK - Can view applications"
        }
      },

      "restricted_operations": {
        "create_job": {
          "method": "POST",
          "url": "{{baseUrl}}/jobs",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "title": "Unauthorized Job",
            "description": "Assistant should not be able to create"
          },
          "expected_result": "403 Forbidden - No create permission"
        },
        "update_job": {
          "method": "PATCH",
          "url": "{{baseUrl}}/jobs/{{jobId}}",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "title": "Unauthorized Update"
          },
          "expected_result": "403 Forbidden - No edit permission"
        },
        "edit_attendance": {
          "method": "PATCH",
          "url": "{{baseUrl}}/attendance/{{attendanceId}}",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "status": "approved"
          },
          "expected_result": "403 Forbidden - No edit permission"
        },
        "manage_applications": {
          "method": "PATCH",
          "url": "{{baseUrl}}/applications/{{applicationId}}",
          "headers": {
            "Authorization": "Bearer {{assistantToken}}",
            "Content-Type": "application/json"
          },
          "body": {
            "status": "rejected"
          },
          "expected_result": "403 Forbidden - No manage permission"
        }
      }
    },

    "team_management_operations": {
      "check_access": {
        "method": "GET",
        "url": "{{baseUrl}}/team/check-access-by-email/employee@company.com",
        "headers": {
          "Authorization": "Bearer {{managerToken}}"
        },
        "query_params": {
          "permission": "canViewJobs"
        },
        "expected_result": "200 OK - Access check result"
      },
      "list_my_access": {
        "method": "GET",
        "url": "{{baseUrl}}/team/my-access",
        "headers": {
          "Authorization": "Bearer {{managerToken}}"
        },
        "expected_result": "200 OK - List of managed employees"
      },
      "update_permissions": {
        "method": "PATCH",
        "url": "{{baseUrl}}/team/access/supervisor@company.com",
        "headers": {
          "Authorization": "Bearer {{ownerToken}}",
          "Content-Type": "application/json"
        },
        "body": {
          "accessLevel": "limited_access",
          "permissions": {
            "canCreateJobs": false,
            "canEditJobs": true,
            "canViewJobs": true,
            "canViewAttendance": true
          },
          "expiresAt": "2025-12-31T23:59:59.000Z"
        },
        "expected_result": "200 OK - Permissions updated"
      },
      "revoke_access": {
        "method": "DELETE",
        "url": "{{baseUrl}}/team/access/assistant@company.com",
        "headers": {
          "Authorization": "Bearer {{ownerToken}}",
          "Content-Type": "application/json"
        },
        "body": {
          "reason": "Access no longer needed"
        },
        "expected_result": "200 OK - Access revoked"
      }
    },

    "testing_workflow": [
      "1. Run setup_requests as business owner to grant team access",
      "2. Test manager_tests with manager token - all should succeed",
      "3. Test supervisor_tests - allowed operations should succeed, restricted should fail",
      "4. Test assistant_tests - view operations should succeed, write operations should fail",
      "5. Test team_management_operations for access control"
    ],

    "expected_http_codes": {
      "success_operations": {
        "GET": 200,
        "POST": 201,
        "PATCH": 200,
        "DELETE": 200
      },
      "forbidden_operations": {
        "code": 403,
        "message": "You do not have permission to perform this action"
      },
      "not_found": {
        "code": 404,
        "message": "Resource not found"
      }
    }
  }
}